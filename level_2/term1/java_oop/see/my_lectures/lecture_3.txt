*โโโโโโโ ุงููุญุงุถุฑุฉ ุงูุซุงูุซุฉ โโโโโโโ*

โข *ุงูุฏุงูุฉ Method :* ูุฌููุนู ูู ุงูุชุนูููุงุช ุงูุจุฑูุฌูุฉ ูููู ุงูุฑุฌูุน ุงูููุง ูุงุณุชุฏุนุงุฆูุง ุนุจุฑ ุงุณู ุงูุฏุงูุฉ ูู ุงูุงูู ุงุฎุฑู ูู ุงูุจุฑูุงูุฌ .

โข *ุชูุนุฑู ุงููุฏุงูุฉ Method ุจู :*
1) ุงูู Procedures: ุฏุงูู ูุงุชุฑุฌุน ูููุฉ (void) .
void Omer() {โฆ}

2) ุงูู Functions : ุฏุงูู ุชุฑุฌุน ูููุฉ (int/float/ุงูุฎุฎ) .
int Omer() {
   int x = 5;         return x;     }

โข *ุณููุชุงูุณ ุงูุฏุงูู :*
Mod reTy NmFun(para lst) { };
public void print(paramtr) {โฆ};
โข ููุน ุงููุตูู ุงุฎุชูุงุฑู ููุณ ุถุฑูุฑู.
โโโโโโโโโโโโโโโโโโโโโโ
โข *ุงูู Parameter List :* ูู ููุน ูุชุฑุชูุจ ูุนุฏุฏ ุจุงุฑุงูุชุฑุงุช ุงูุฏุงูู .

โข *ุงูู Signature Method :* ุชุญูู ุงุณู ุงูุฏุงูู ูParameter List ููุทุงุจูุชูุง ููุงุฑูููุช .

โข *ุงูู Method Overloading :* ูู ุฏูุงู ููุง ููุณ ุงูุงุณู ูููู ุจุจุงุฑุงูุชุฑุงุช ูุฎุชููู .
void sum(int num) {โฆ}
void sum(float num) {โฆ}
void sum(int num, int num2) {โฆ}

โข ูู ุฏุงูู ุชุนุฑู ุฏุงุฎู ููุงุณ ูุฌุจ ุงู ูููู ููุง Signature ูุฑูุฏ .

โข *ุงูู Static Method :* ุนูุฏ ุชุนุฑูู ุฏุงูุฉ ุฏุงุฎู ููุงุณ ุจูstaticุ ูููู ุงุณุชุฏุนุงุก ุงูุฏุงูู ุฏูู ุงูุดุงุก Object ููููุงุณ .
class Students {
   static void Print(){โฆ}   }

โข *ุงูู Argument :* ูู ุงููุชุบูุฑุงุช ุงูุชู ูุชู ุชูุฑูุฑูุง ุงูู ุงูุฏุงูู .

โข *ุงูู Parameter :* ูู ุงููุชุบูุฑุงุช ุงูุชู ุชุณุชูุจู Argument ูู ุงูุฏุงูู .

โข ูู ุงูู Java ูุชู ุชูุฑูุฑ ุงูุจุงุฑุงูุชุฑุงุช ุจุงููููุฉ ููุท ููุงุชูุจู ุงูุชูุฑูุฑ ุจุงููุฑุฌุน .
โโโโโโโโโโโโโโโโโโโโโโ
โข *ูุฒุงูุง ุงุณุชุฎุฏุงู ุงูุฏูุงู :*
1) ุงุนุงุฏุฉ ุงุณุชุฎุฏุงู ุงูุชุนูููุงุช ุงูุจุฑูุฌูู (ุนุฏู ุชูุฑุงุฑ ุงูุงููุงุฏ) .
2) ุฌุนู ุงูููุฏ ุงูุซุฑ ูุงุจููุฉ ูููุฑุงุกุฉ .
3) ุงูุฎุฎ .
โโโโโโโโโโโโโโโโโโโโโโ
โข *ุงููุฑู ุจูู Overloading & Overriding*

1) *ุงูู Overloading :* ุฏูุงู ูู ููุงุณ ููุง ููุณ ุงูุงุณู ููู ูุน Parameters List ูุฎุชููู .
class Studenta {
   void Omer() {โฆ}
   void Omer(int x) {โฆ}
   void Omer(int x, float y) {โฆ}}

2) *ุงูู Overriding :* ุฏูุงู ูู ููุงุณ ููุง ููุณ ุงูุงุณู ูุน Parameters List ูุทุงุจูุฉ (ุชููู ูุน ุงููุฑุงุซู ุฏุงูู ูู ุงูุงุจ ูุฏุงูู ูู ุงูุงุจู) .
class Animal {
   void Print() {โฆ}   }

class Cat extends Animal {
   void Print() {โฆ}   }
โโโโโโโโโโโโโโโโโโโโโโ
โข *ุงูู OverLoadding Constructor*
ุฏูุงู ูู ููุงุณ ููุง ููุณ ุงุณู ุงูููุงุณ ูููู ุจุจุงุฑุงูุชุฑุงุช ูุฎุชููุฉุ ุชุนุทู ููู ุงูููุฉ ูููุงุฆู ุนูุฏ ุฃูุดุงุกู .
class Students {
   Students() {โฆ}
   Students(int x) {โฆ} }

๐๏ธ *โโโโ ุนูููููุฑ ุฎููุงูููุฏ ุจููุงูุฒูููุฑ โโโโ*